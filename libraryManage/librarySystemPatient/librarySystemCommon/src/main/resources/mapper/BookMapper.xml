<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sale.ljw.backend.dao.BookMapper">

    <resultMap id="BaseResultMap" type="sale.ljw.backend.pojo.Book">
        <id property="bookId" column="book_id" jdbcType="VARCHAR"/>
        <result property="typeId" column="type_id" jdbcType="INTEGER"/>
        <result property="bookName" column="book_name" jdbcType="VARCHAR"/>
        <result property="bookAuthor" column="book_author" jdbcType="VARCHAR"/>
        <result property="bookInfo" column="book_info" jdbcType="VARCHAR"/>
        <result property="bookImage" column="book_image" jdbcType="VARCHAR"/>
        <result property="bookAddress" column="book_address" jdbcType="VARCHAR"/>
        <result property="bookStatus" column="book_status" jdbcType="CHAR"/>
        <result property="bookCount" column="book_count" jdbcType="INTEGER"/>
        <result property="bookDelete" column="book_delete" jdbcType="INTEGER"/>
        <result property="borrowNumber" column="borrow_number" jdbcType="INTEGER"/>
        <result property="bookLanguage" column="book_language" jdbcType="CHAR"/>
        <result property="authorCountry" column="author_country" jdbcType="CHAR"/>
        <result property="bookStar" column="book_star" jdbcType="DOUBLE"/>
    </resultMap>

    <sql id="Base_Column_List">
        book_id
        ,type_id,book_name,
        book_author,book_info,book_image,
        book_address,book_status,book_count,
        book_delete,borrow_number,book_language,
        author_country,book_star
    </sql>
    <select id="findBookByCriteria" resultType="java.util.Map">
        SELECT DISTINCT book_name bookName,book_image bookImage,book_author bookAuthor,
                        book_info bookInfo,book_address bookAddress,book_star bookStar,
                        Constant.value bookStatus,Book_type.type_name bookType,
                        Book_Constant_language.value bookLanguage,Book_Constant_country.value bookCountry,
                        Book.borrow_number borrowNumber,Book.book_id bookId,Book.book_count bookCount
        FROM Book
                 INNER JOIN Constant ON Book.book_status=Constant.coding
                 INNER JOIN Type Book_type ON Book.type_id=Book_type.type_id
                 INNER JOIN Constant Book_Constant_language ON Book.book_language=Book_Constant_language.coding
                 INNER JOIN Constant Book_Constant_country ON Book.author_country=Book_Constant_country.coding
        WHERE Book.book_delete=0
        <if test="bookName != null">
            AND Book.book_name LIKE CONCAT('%',#{bookName},'%')
        </if>
        <if test="bookAuthor != null">
            AND Book.book_author LIKE CONCAT('%',#{bookAuthor},'%')
        </if>
        <if test="bookLanguageCoding != null">
            AND Book.book_language = #{bookLanguageCoding}
        </if>
        <if test="bookTypeId != null">
            AND Book.type_id = #{bookTypeId}
        </if>
        <if test="authorCountry != null">
            AND Book.author_country = #{authorCountry}
        </if>
        <if test="bookStarMin != null">
            AND Book.book_star > #{bookStarMin}
        </if>
        <if test="recommendedBooks">
            AND Book.book_star >= 5.0
        </if>
        ORDER BY Book.book_star
        <if test="borrowNumber">
            DESC
        </if>
    </select>

    <resultMap id="bookDetailsInformation" type="sale.ljw.backend.form.BookDetailsInformation">
        <id property="bookId" column="bookId" jdbcType="VARCHAR"/>
        <id property="bookName" column="bookName" jdbcType="VARCHAR"/>
        <id property="author" column="author" jdbcType="VARCHAR"/>
        <id property="address" column="address" jdbcType="VARCHAR"/>
        <id property="bookInfo" column="bookInfo" jdbcType="VARCHAR"/>
        <id property="typeName" column="typeName" jdbcType="VARCHAR"/>
        <id property="country" column="country" jdbcType="VARCHAR"/>
        <id property="bookStatus" column="bookStatus" jdbcType="VARCHAR"/>
        <id property="bookLanguage" column="bookLanguage" jdbcType="VARCHAR"/>
        <id property="bookCount" column="bookCount" jdbcType="VARCHAR"/>
        <id property="bookStar" column="bookStar" jdbcType="DOUBLE"/>
        <id property="bookImage" column="bookImage" jdbcType="VARCHAR"/>
        <collection property="tagList"
                    javaType="arrayList"
                    ofType="map"
                    column="bookId"
                    select="sale.ljw.backend.dao.BooktapMapper.queryBookDetailsTag"/>
    </resultMap>

    <select id="getBookDetails" resultMap="bookDetailsInformation">
        SELECT  Book.book_id bookId,Book.book_name bookName,Book.book_author author,Book.book_address address,bookType.type_name typeName,country.value country,
                bookLanguage.value bookLanguage,Book.book_count bookCount,bookStatus.value bookStatus,book_star bookStar,Book.book_info bookInfo,Book.book_image bookImage
        FROM Book
                 INNER JOIN libraryManage.Type bookType ON bookType.type_id=Book.type_id
                 INNER JOIN Constant country ON country.coding=Book.author_country
                 INNER JOIN Constant bookLanguage ON bookLanguage.coding=Book.book_language
                 INNER JOIN Constant bookStatus ON bookStatus.coding=Book.book_status
        WHERE Book.book_delete=0 AND Book.book_id=#{bookId}
    </select>

    <select id="recommendedBooks" resultType="map">
        SELECT book_id bookId,book_name bookName,Type.type_name typeName,book_star bookStar,book_image bookImage
        FROM
            Book
                INNER JOIN libraryManage.Type ON Type.type_id=Book.type_id
        WHERE Book.book_delete=0
        ORDER BY (
                     CASE
                         WHEN Book.type_id=(
                             SELECT bookType.type_id
                             FROM Book bookType
                             WHERE bookType.book_id=#{bookId}
                         ) THEN 1 ELSE 4 END ),book_star DESC
    </select>
    <select id="homeRecommendedBooks" resultType="java.util.Map">
        SELECT book_id bookId,book_name bookName,Type.type_name typeName,book_star bookStar,book_image bookImage
        FROM
            Book
                INNER JOIN libraryManage.Type ON Type.type_id=Book.type_id
        WHERE Book.book_delete=0
        ORDER BY (
                     CASE
                         WHEN Book.type_id IN (
                             (SELECT  DISTINCT
                                  BookBorrow.type_id
                              FROM
                                  Borrow
                                      INNER JOIN Book BookBorrow ON BookBorrow.book_id=Borrow.book_id
                              WHERE
                                  Borrow.user_id=#{userId}
                              UNION
                              SELECT DISTINCT
                                  BookBookShelf.type_id
                              FROM
                                  BookShelf
                                      INNER JOIN Book BookBookShelf ON BookBookShelf.book_id=BookShelf.book_id
                              WHERE
                                  BookShelf.user_id=#{userId})
                         ) THEN 1 ELSE 4 END),book_star DESC
    </select>
    <select id="getBookReviews" resultType="java.util.Map">
        SELECT
            User.user_name userName,User.User_image userImage,Comments.comments_info commentsInfo
        FROM
            Comments
                INNER JOIN libraryManage.User ON User.user_id=Comments.user_id
        WHERE
            Comments.book_id=#{bookId} AND delete_comments=0
    </select>
</mapper>
